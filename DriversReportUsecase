Problem statement: Read the drivers data (, seperated) from transaction text file from HDFS path /user/cloudera/data/Drivers. Generate a report with November changes to the drivers (Use transaction creation date MM/DD/CCYY). Also mask the SPI data in the report. Save the report in HDFS location /user/cloudera/Practice/DriverNovReport.

Input file Driver structure is of type.

1. Creation_Date  Char(10) /* MM/DD/CCYY format */
2. FirstName      Varchar(30)
3. MidInitial     Char(1)
4. LastName       Varchar(30)
5. DOB            Char(10)  /*Date of Birth MM/DD/CCYY */
6. SSN            Number(9) /* either Null or numeric value */
7. License#       Varchar(25)
8. License_State  Char(02)  /* Alpha state code */
9. Discounts changed  Char(01)  /* Y or N  */
10. Accident_Voilation Char(01) /* Y or N  */
11. Claims_In_3Yrs  Char(01)    /* Y or N  */
12. Claim_amt     Number(6)


Solution:

// Need to mask SSN and Driver's license#, so create two functions maskSSN and maskDL to mask the SPI data.

def maskSSN(SSN: String): String = {
  if SSN.exists(x => x != null && x != "")
     SSN = "XXXXX" + substring(SSN,5)
  else
    SSN = ""
  SSN
}

def maskDL(DL: String): String = {
  var len1 = 0
  var DL1 = DL

  if (DL.exists(x => x != null && x != "")) {
    DL.length match{
      case 1 => DL1 = "X"
      case 2 | 3 | 4 => {
      len1 = DL.length - 1
       DL1 = DL1.substring(0,len1).replaceAll("[A-Za-z0-9]", "X") + DL.substring(len1)
      }
      case 5 | 6 => DL1 = "XX" + DL.substring(2)
      case _ => {
       len1 = DL.length - 4
       DL1 = DL1.substring(0,len1).replaceALL("[0-9A-Za-z]","X") + DL.substring(len1)
      }
    }

  }
  else
   DL1 = ""

 DL1
}
val DriversNovData = sc.textFile("/user/cloudera/data/Drivers").filter(d => substring(d.split(",")(0),0,2) == "11" && substring(d.split(",")(0),6) == "2017")

val MaskedData = DriversNovData.map(n => {
val rec = n.split(",")
rec(0) + "," + rec(1) + "," + rec(2) + "," + rec(3) + "," + rec(4) + "," + rec(5) + "," + rec(6) + "," + maskSSN(rec(7)) + "," + maskDL(rec(8)) + "," + rec(9) + "," + rec(10) + "," + rec(11)
}
)

MaskedData.saveAsTextFile("/user/cloudera/Practice/DriverNovReport")
